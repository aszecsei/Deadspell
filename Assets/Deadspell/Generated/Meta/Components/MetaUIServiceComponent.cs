//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity uIServiceEntity { get { return GetGroup(MetaMatcher.UIService).GetSingleEntity(); } }
    public Deadspell.Components.Services.UIServiceComponent uIService { get { return uIServiceEntity.uIService; } }
    public bool hasUIService { get { return uIServiceEntity != null; } }

    public MetaEntity SetUIService(Deadspell.Services.IUIService newInstance) {
        if (hasUIService) {
            throw new Entitas.EntitasException("Could not set UIService!\n" + this + " already has an entity with Deadspell.Components.Services.UIServiceComponent!",
                "You should check if the context already has a uIServiceEntity before setting it or use context.ReplaceUIService().");
        }
        var entity = CreateEntity();
        entity.AddUIService(newInstance);
        return entity;
    }

    public void ReplaceUIService(Deadspell.Services.IUIService newInstance) {
        var entity = uIServiceEntity;
        if (entity == null) {
            entity = SetUIService(newInstance);
        } else {
            entity.ReplaceUIService(newInstance);
        }
    }

    public void RemoveUIService() {
        uIServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public Deadspell.Components.Services.UIServiceComponent uIService { get { return (Deadspell.Components.Services.UIServiceComponent)GetComponent(MetaComponentsLookup.UIService); } }
    public bool hasUIService { get { return HasComponent(MetaComponentsLookup.UIService); } }

    public void AddUIService(Deadspell.Services.IUIService newInstance) {
        var index = MetaComponentsLookup.UIService;
        var component = (Deadspell.Components.Services.UIServiceComponent)CreateComponent(index, typeof(Deadspell.Components.Services.UIServiceComponent));
        component.Instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceUIService(Deadspell.Services.IUIService newInstance) {
        var index = MetaComponentsLookup.UIService;
        var component = (Deadspell.Components.Services.UIServiceComponent)CreateComponent(index, typeof(Deadspell.Components.Services.UIServiceComponent));
        component.Instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveUIService() {
        RemoveComponent(MetaComponentsLookup.UIService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherUIService;

    public static Entitas.IMatcher<MetaEntity> UIService {
        get {
            if (_matcherUIService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.UIService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherUIService = matcher;
            }

            return _matcherUIService;
        }
    }
}
