//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Deadspell.Components.VendorComponent vendor { get { return (Deadspell.Components.VendorComponent)GetComponent(GameComponentsLookup.Vendor); } }
    public bool hasVendor { get { return HasComponent(GameComponentsLookup.Vendor); } }

    public void AddVendor(Deadspell.Core.VendorCategory newVends) {
        var index = GameComponentsLookup.Vendor;
        var component = (Deadspell.Components.VendorComponent)CreateComponent(index, typeof(Deadspell.Components.VendorComponent));
        component.Vends = newVends;
        AddComponent(index, component);
    }

    public void ReplaceVendor(Deadspell.Core.VendorCategory newVends) {
        var index = GameComponentsLookup.Vendor;
        var component = (Deadspell.Components.VendorComponent)CreateComponent(index, typeof(Deadspell.Components.VendorComponent));
        component.Vends = newVends;
        ReplaceComponent(index, component);
    }

    public void RemoveVendor() {
        RemoveComponent(GameComponentsLookup.Vendor);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVendor;

    public static Entitas.IMatcher<GameEntity> Vendor {
        get {
            if (_matcherVendor == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Vendor);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVendor = matcher;
            }

            return _matcherVendor;
        }
    }
}
