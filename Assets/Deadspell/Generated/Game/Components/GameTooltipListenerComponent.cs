//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TooltipListenerComponent tooltipListener { get { return (TooltipListenerComponent)GetComponent(GameComponentsLookup.TooltipListener); } }
    public bool hasTooltipListener { get { return HasComponent(GameComponentsLookup.TooltipListener); } }

    public void AddTooltipListener(System.Collections.Generic.List<ITooltipListener> newValue) {
        var index = GameComponentsLookup.TooltipListener;
        var component = (TooltipListenerComponent)CreateComponent(index, typeof(TooltipListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTooltipListener(System.Collections.Generic.List<ITooltipListener> newValue) {
        var index = GameComponentsLookup.TooltipListener;
        var component = (TooltipListenerComponent)CreateComponent(index, typeof(TooltipListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTooltipListener() {
        RemoveComponent(GameComponentsLookup.TooltipListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTooltipListener;

    public static Entitas.IMatcher<GameEntity> TooltipListener {
        get {
            if (_matcherTooltipListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TooltipListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTooltipListener = matcher;
            }

            return _matcherTooltipListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddTooltipListener(ITooltipListener value) {
        var listeners = hasTooltipListener
            ? tooltipListener.value
            : new System.Collections.Generic.List<ITooltipListener>();
        listeners.Add(value);
        ReplaceTooltipListener(listeners);
    }

    public void RemoveTooltipListener(ITooltipListener value, bool removeComponentWhenEmpty = true) {
        var listeners = tooltipListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTooltipListener();
        } else {
            ReplaceTooltipListener(listeners);
        }
    }
}
